name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-userservice:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check if UserService has changed
        id: check_changes_userservice
        uses: MarceloPrado/has-changed-path@v1
        with:
          paths: "userservice"

      - name: Build UserService
        if: steps.check_changes_userservice.outputs.changed == 'true'
        run: |
          cd ./userservice
          dotnet add package LabelGenius.Authentication --version 0.0.1 
          dotnet restore
          dotnet build

  build-projectservice:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check if ProjectService has changed
        id: check_changes_projectservice
        uses: MarceloPrado/has-changed-path@v1
        with:
          paths: "projectservice"

      - name: Build ProjectService
        if: steps.check_changes_projectservice.outputs.changed == 'true'
        run: |
          cd ./projectservice
          dotnet add package LabelGenius.Authentication --version 0.0.1 
          dotnet restore
          dotnet build

  unit-test:
    needs: [build-userservice, build-projectservice]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run unit tests
        run: |
          cd ./projectservice.unittests
          dotnet restore
          dotnet test --filter FullyQualifiedName~UnitTestProject

  build-and-deploy-userservice:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and Push Docker Images
        if: steps.check_changes_userservice.outputs.changed == 'true'
        run: |
          cd ./userservice
          docker build -t $DOCKER_USERNAME/userservice:latest --build-arg GITHUB_USERNAME=$GITHUB_USERNAME --build-arg GITHUB_TOKEN=$GITHUB_TOKEN .
          docker push $DOCKER_USERNAME/userservice:latest

  build-and-deploy-projectservice:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and Push Docker Images
        if: steps.check_changes_projectservice.outputs.changed == 'true'
        run: |
          cd ./projectservice
          docker build -t $DOCKER_USERNAME/projectservice:latest --build-arg GITHUB_USERNAME=$GITHUB_USERNAME --build-arg GITHUB_TOKEN=$GITHUB_TOKEN .
          docker push $DOCKER_USERNAME/projectservice:latest
