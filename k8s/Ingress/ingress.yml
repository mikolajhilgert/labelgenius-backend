Sure, hereâ€™s how you can add CORS configuration to your Ingress rule:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelgenius-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: ""
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://labelgenius.vercel.app"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type"
spec:
  tls:
    - hosts:
        - labelgenius.pics
      secretName: tls-secret-1
  ingressClassName: nginx
  rules:
    - host: labelgenius.pics
      http:
        paths:
          - path: "/api/project(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: project-service
                port:
                  number: 80
          - path: "/api/me(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 80
          - path: "/api/auth(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: 80
